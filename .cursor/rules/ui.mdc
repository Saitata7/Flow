---
description: >
  Production-grade UI/UX design system rules for Flow mobile app.
  These rules must be enforced whenever Cursor or a developer generates or edits UI code.
  Act as a 15+ year UI/UX designer + frontend engineer: be strict, practical, and implementation-friendly.

globs:
  - "apps/mobile/src/**"
  - "apps/mobile/styles/**"
  - "apps/mobile/src/components/**"
  - "apps/mobile/src/screens/**"
alwaysApply: true

rules:
  - name: "Law of Proximity & Grouping"
    text: |
      • Group related controls visually. Use micro-gap = 8px for intra-group spacing.
      • Separate logical groups by component-gap = 16px and section-gap = 32px.
      • Label→control gap must be ≤ 8px vertically; if label side-by-side, use 12px horizontal gap.
      • Do not place unrelated controls closer than 16px.
      • Large sections (cards, lists) must be separated by 32px (2 units).

  - name: "Spacing System (4px base unit)"
    text: |
      • Base unit = 4px. Use only the spacing scale from styles/layout.js:
        xs: 4, sm: 8, md: 12, base: 16, lg: 20, xl: 24, x2l: 32, x3l: 40, x4l: 48, x5l: 64.
      • Mobile side gutters: 16px. Tablet gutters: 24–32px.
      • No ad-hoc px values in components; always import spacing tokens.
      • Use multiples of the base unit. No arbitrary spacing values.

  - name: "Geometry & Radii (Squircle System)"
    text: |
      • Global squircle radius: radii.squircle = 18px (cards, major surfaces, FAB).
      • Small radius: radii.small = 8px (inputs, small buttons).
      • Large radius: radii.large = 28px (banners, hero CTAs).
      • Maintain consistent family across a screen (avoid mixing square and fully rounded).
      • Use radii.base = 12px for standard buttons and cards.

  - name: "Tyscale Typography System"
    text: |
      • Use the typography tokens in styles/typography.js:
        h1: 34/42/700, h2: 28/36/700, h3: 22/28/600, h4: 18/24/600,
        body: 16/22/400, sub: 14/20/400, caption: 12/16/400.
      • 1em = base body (16px). Use typographyUtils.pxToEm(px) for conversions.
      • KeyElements (stats, primary CTAs) use weight 600–700. Secondary use 400–500.
      • Do not create new font sizes beyond the tokens. Use pre-composed styles.

  - name: "HSL-First Color System"
    text: |
      • Define all core colors in styles/colors.js as HSL (store h, s, l separately) and export hex fallbacks.
      • Base tokens from design system:
        bgStart: hsl(21.2, 96.0%, 90.2%)  // #FEDFCE
        bgEnd:   hsl(32.0,100.0%, 88.2%)  // #FFE3C3
        accentStart: hsl(37.7, 91.1%, 64.7%) // #F7BA53
        accentEnd:   hsl(28.2, 91.1%, 64.7%) // #F7A053
        textPrimary: hsl(0,0,24.3%) // #3E3E3E
        textSecondary: hsl(0,0,34.5%) // #585858
        success: hsl(120,40.2%,50.2%) // #4DB34D
        danger: hsl(3,100%,69.0%) // #FF6961
        warning: hsl(39.2,96.0%,48.4%) // #F2A005
      • Use hslUtils.tint(), hslUtils.shade(), hslUtils.mute() for dynamic variants.
      • Always import color tokens; never hardcode hex values in components.

  - name: "Gradient Usage Rules"
    text: |
      • Main app background: gradients.mainBackground only for the app shell/background.
      • Quote & AddFlow CTA: gradients.accentGradient.
      • Do not use app shell gradient inside cards; cards use solid or subtle tint.
      • Use gradients.accentGradient for primary CTAs and quote boxes.

  - name: "Contrast & Accessibility (WCAG AA)"
    text: |
      • Body text: contrast ratio ≥ 4.5:1 vs background (WCAG AA).
      • Large text (≥18pt bold or ≥24pt regular): contrast ratio ≥ 3:1.
      • If computed contrast < threshold, use darker shade (l - 12) or adjust saturation.
      • All actionable elements must have accessibilityLabel and accessibilityRole.
      • Announce important state changes (e.g., "Flow marked complete today").

  - name: "Size, Weight, Color & Gaps — Explicit Rules"
    text: |
      • Sizes use typography tokens only. No arbitrary font sizes.
      • Weights: headings/stats 600–700, body/caption 400–500.
      • Primary accent reserved for CTAs & active states only.
      • Gaps adhere to spacing tokens; micro-gap = 8, component-gap = 16, section-gap = 32.

  - name: "Elevation & Shadow System"
    text: |
      • Use elevation tokens from styles/layout.js:
        elevation.low  -> ios: shadowOpacity 0.06 radius 4 / android elevation 2
        elevation.medium -> ios: 0.09 radius 8 / android elevation 6
        elevation.high -> ios: 0.14 radius 16 / android elevation 12
      • Allowed: cards, FABs, modals, floating elements.
      • Avoid shadows on dense rows, nav bars, inputs. Use 1px strokes for separators.
      • Use elevation.low for list cards, medium for main cards, high for floating modals.

  - name: "Button & Input Component Rules"
    text: |
      • Primary button: components.button.primary (height 48, borderRadius 12, paddingHorizontal 20).
      • Secondary: components.button.secondary (2px outline, text accent color).
      • Disabled: opacity 0.44, no elevation.
      • Inputs: components.input (height 48, borderRadius 12, padding 12).
      • Label above control with 6–8px gap using spacing.sm.
      • Error state: border 2px danger color, inline error text in caption token.
      • Min touch target 44x44 for all interactive elements.

  - name: "Card & Layout Specifications"
    text: |
      • Card padding: spacing.base = 16; borderRadius: radii.squircle (18px); elevation: low or medium.
      • Habit card layout: components.flowCard.leftColumnWidth (30%), right date-grid (70%).
      • Internal grid spacing: use spacing.md/base; maintain 6–8px white gap between columns.
      • Use components.card specifications for all card components.

  - name: "Date Grid / Habit Status Specifications"
    text: |
      • Status circle diameter: components.dateGrid.circleDiameter = 28px.
      • States:
        - completed: solid success color with white check icon.
        - missed: solid danger color with white X icon.
        - pending (task exists, not done): solid white circle.
        - no-task: 2px white border circle, transparent centre.
      • Border width for 'no-task' = components.dateGrid.circleBorderWidth = 2px.
      • Current day header: highlighted pill (white bg on peach grid) and bold date text.
      • Keep thin white separator/gap (spacing.sm = 8px) between flow list column and date grid.

  - name: "Motion & Micro-interactions"
    text: |
      • Standard durations from motion.durations:
        micro (tap) = 120ms
        small = 200ms
        medium = 280ms
        large = 320ms
        xlarge = 420ms
      • Use scale-on-press (motion.scale.press = 0.98) and spring for list reorders.
      • Keep animations non-blocking and use motion.spring configurations.

  - name: "Accessibility & Touch Targets"
    text: |
      • Minimum touch target: 44x44 dp for all interactive items.
      • Provide accessibilityLabel and accessibilityRole per control.
      • Respect dynamic font scaling. Use relative units where possible.
      • Support screen readers with proper semantic markup.

  - name: "Theming & HSL Helper Rules"
    text: |
      • Theme tokens must expose base H, S, L values so tints/shades are computed at runtime.
      • Use hslUtils.tint(h,s,l,amount), hslUtils.shade(h,s,l,amount), hslUtils.mute(h,s,l) helpers.
      • Provide primaryLight, primaryDark, primaryMuted computed from base token.
      • Always import hslUtils for dynamic color calculations.

  - name: "Strokes vs Shadows Usage"
    text: |
      • Use 1px strokes for list separators and compact UI.
      • Use shadows for elevation (cards, FAB, modals). Avoid shadow on separators.
      • Use elevation tokens consistently across components.

  - name: "FAB & Bottom Tab Specifications"
    text: |
      • FAB: components.fab (size 56, borderRadius 28, elevation.high, main accent gradient background).
      • Bottom tab: components.bottomTab (height 64, icon size 26, label 12, safeArea paddingBottom 12).
      • Active icon color: accent; inactive: hsl(0,0,50%).
      • FAB icon white 24px, positioned with safe area considerations.

  - name: "Validation Checklist (Enforce These)"
    text: |
      • [ ] All touch targets >= 44x44
      • [ ] Color contrast >= 4.5:1 for body text
      • [ ] Spacing uses layout tokens only — no hardcoded px
      • [ ] Header & bottom tab safe areas respected
      • [ ] Date-grid circles are 28px and use correct state colors
      • [ ] Buttons use defined heights and radii from components.button
      • [ ] Shadow usage limited to allowed components
      • [ ] Typography uses Tyscale tokens only
      • [ ] Colors use HSL tokens with proper contrast ratios
      • [ ] All interactive elements have accessibility labels
      • Cursor must fail generation if any rule above is violated in changed files.

  - name: "Developer Constraints for Cursor"
    text: |
      • Modify only: styles/colors.js, styles/layout.js, styles/typography.js, cursor/rules/ui.mdc.
      • Do NOT convert files to TypeScript. Do NOT create arbitrary top-level folders.
      • When generating UI, always reference tokens from styles/*; do not inline hex or px.
      • Add concise token comments explaining rationale and HSL helpers.
      • Use pre-composed styles from typography, components, and elevation objects.
      • Import and use spacing, radii, and color tokens consistently.

  - name: "Component Import Patterns"
    text: |
      • Always import tokens: import { spacing, radii, elevation } from '../styles/layout';
      • Always import colors: import { colors, gradients, hslUtils } from '../styles/colors';
      • Always import typography: import { typography, typographyTokens } from '../styles/typography';
      • Use destructured imports for cleaner code: const { base, lg, xl } = spacing;
      • Compose styles using spread operator: { ...typography.h1, color: colors.light.textPrimary }

  - name: "Error Handling & Form Validation"
    text: |
      • Inline validation message color = colors.light.danger.
      • Error icon + label must meet 3:1 ratio at minimum for small text.
      • Use typography.caption for error messages.
      • Error borders use 2px width with danger color.
      • Provide clear, actionable error messages.

  - name: "Performance & Optimization"
    text: |
      • Use elevation tokens sparingly to prevent performance issues.
      • Avoid complex gradients in lists or frequently rendered components.
      • Use memoization for expensive style calculations.
      • Prefer solid colors over gradients for better performance.
      • Use Platform.OS checks for platform-specific optimizations.

---