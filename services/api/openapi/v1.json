{
  "openapi": "3.0.3",
  "info": {
    "title": "Flow API",
    "description": "# Flow API v1.0.0\n\n## Overview\nFlow API is a comprehensive habit tracking and personal development platform backend service. It provides secure, scalable endpoints for managing user flows, entries, activities, and synchronization across multiple devices.\n\n## Key Features\n- üîê **Firebase Authentication Integration** - Secure JWT-based authentication\n- üìä **Flow Management** - Create, track, and manage personal habits and goals\n- üìù **Entry Tracking** - Log daily progress with quantitative and qualitative data\n- üìà **Analytics & Insights** - Comprehensive activity statistics and progress tracking\n- üîÑ **Offline Sync** - Robust offline-to-online synchronization system\n- ‚öôÔ∏è **User Settings** - Customizable preferences and privacy controls\n- üè• **Health Monitoring** - Real-time service health and performance metrics\n\n## Security\n- Bearer token authentication (JWT)\n- Rate limiting (100 requests/minute)\n- Input validation and sanitization\n- CORS protection\n- SQL injection prevention\n- XSS protection\n\n## Rate Limits\n- **General API**: 100 requests per minute per IP\n- **Authentication**: 10 requests per minute per IP\n- **Sync Operations**: 50 requests per minute per user\n\n## Support\nFor API support, please contact our development team or refer to the documentation.",
    "version": "1.0.0",
    "contact": {
      "name": "Flow API Support Team",
      "email": "api-support@flow.app",
      "url": "https://flow.app/support"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "termsOfService": "https://flow.app/terms"
  },
  "servers": [
    {
      "url": "https://flow-api-c57f3te5va-uc.a.run.app",
      "description": "Production Environment - Google Cloud Run",
      "variables": {
        "environment": {
          "default": "production",
          "enum": [
            "production"
          ],
          "description": "Production environment with full monitoring and logging"
        }
      }
    },
    {
      "url": "https://staging-flow-api-891963913698.us-central1.run.app",
      "description": "Staging Environment - Google Cloud Run",
      "variables": {
        "environment": {
          "default": "staging",
          "enum": [
            "staging"
          ],
          "description": "Staging environment for testing and validation"
        }
      }
    },
    {
      "url": "http://localhost:4000",
      "description": "Local Development Environment",
      "variables": {
        "environment": {
          "default": "development",
          "enum": [
            "development"
          ],
          "description": "Local development environment with debug endpoints enabled"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from Firebase Authentication. Include the token in the Authorization header as \"Bearer {token}\".",
        "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
      },
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key for service-to-service authentication (internal use only)",
        "example": "flow-api-key-12345"
      }
    },
    "schemas": {
      "Flow": {
        "type": "object",
        "required": [
          "id",
          "title",
          "trackingType",
          "frequency",
          "ownerId"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "maxLength": 500
          },
          "trackingType": {
            "type": "string",
            "enum": [
              "Binary",
              "Quantitative",
              "Time-based"
            ]
          },
          "frequency": {
            "type": "string",
            "enum": [
              "Daily",
              "Weekly",
              "Monthly"
            ]
          },
          "everyDay": {
            "type": "boolean"
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Sun",
                "Mon",
                "Tue",
                "Wed",
                "Thu",
                "Fri",
                "Sat"
              ]
            }
          },
          "reminderTime": {
            "type": "string",
            "format": "date-time"
          },
          "reminderLevel": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3"
            ]
          },
          "cheatMode": {
            "type": "boolean"
          },
          "planId": {
            "type": "string"
          },
          "goal": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "number",
                  "duration",
                  "count"
                ]
              },
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string"
              }
            }
          },
          "progressMode": {
            "type": "string",
            "enum": [
              "sum",
              "average",
              "latest"
            ]
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 30
            },
            "maxItems": 10
          },
          "archived": {
            "type": "boolean"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "private",
              "friends",
              "public"
            ]
          },
          "ownerId": {
            "type": "string"
          },
          "schemaVersion": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "FlowEntry": {
        "type": "object",
        "required": [
          "id",
          "flowId",
          "date",
          "symbol"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "flowId": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "symbol": {
            "type": "string",
            "enum": [
              "+",
              "-",
              "*",
              "/"
            ]
          },
          "emotion": {
            "type": "string"
          },
          "moodScore": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5
          },
          "note": {
            "type": "string",
            "maxLength": 1000
          },
          "quantitative": {
            "type": "object",
            "properties": {
              "unitText": {
                "type": "string"
              },
              "count": {
                "type": "number"
              }
            }
          },
          "timebased": {
            "type": "object",
            "properties": {
              "totalDuration": {
                "type": "number"
              }
            }
          },
          "device": {
            "type": "string",
            "enum": [
              "mobile",
              "web",
              "api"
            ]
          },
          "geo": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "minimum": -90,
                "maximum": 90
              },
              "lng": {
                "type": "number",
                "minimum": -180,
                "maximum": 180
              },
              "accuracy": {
                "type": "number",
                "minimum": 0
              }
            }
          },
          "streakCount": {
            "type": "integer",
            "minimum": 0
          },
          "edited": {
            "type": "boolean"
          },
          "editedBy": {
            "type": "string"
          },
          "editedAt": {
            "type": "string",
            "format": "date-time"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "schemaVersion": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "email"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "non-binary",
              "transgender",
              "prefer-not-to-say",
              "other"
            ]
          },
          "race": {
            "type": "string",
            "enum": [
              "american-indian",
              "asian",
              "black",
              "hispanic",
              "native-hawaiian",
              "white",
              "multiracial",
              "prefer-not-to-say",
              "other"
            ]
          },
          "disability": {
            "type": "string",
            "enum": [
              "none",
              "visual",
              "hearing",
              "mobility",
              "cognitive",
              "mental-health",
              "chronic-illness",
              "prefer-not-to-say",
              "other"
            ]
          },
          "preferredLanguage": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "healthGoals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fitnessLevel": {
            "type": "string",
            "enum": [
              "beginner",
              "intermediate",
              "advanced",
              "expert"
            ]
          },
          "medicalConditions": {
            "type": "string"
          },
          "profileVisibility": {
            "type": "string",
            "enum": [
              "public",
              "friends",
              "private"
            ]
          },
          "dataSharing": {
            "type": "object",
            "properties": {
              "analytics": {
                "type": "boolean"
              },
              "research": {
                "type": "boolean"
              },
              "marketing": {
                "type": "boolean"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "notifications": {
            "type": "object",
            "properties": {
              "email": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "sms": {
                "type": "boolean"
              },
              "reminders": {
                "type": "boolean"
              },
              "achievements": {
                "type": "boolean"
              },
              "weeklyReports": {
                "type": "boolean"
              }
            }
          },
          "privacy": {
            "type": "object",
            "properties": {
              "profileVisibility": {
                "type": "string",
                "enum": [
                  "public",
                  "friends",
                  "private"
                ]
              },
              "showStats": {
                "type": "boolean"
              },
              "showFlows": {
                "type": "boolean"
              },
              "allowFriendRequests": {
                "type": "boolean"
              }
            }
          },
          "preferences": {
            "type": "object",
            "properties": {
              "theme": {
                "type": "string",
                "enum": [
                  "light",
                  "dark",
                  "auto"
                ]
              },
              "language": {
                "type": "string"
              },
              "timezone": {
                "type": "string"
              },
              "dateFormat": {
                "type": "string"
              },
              "timeFormat": {
                "type": "string",
                "enum": [
                  "12h",
                  "24h"
                ]
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {},
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {}
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "limit": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              },
              "totalPages": {
                "type": "integer"
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "success",
          "error",
          "message"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Always false for error responses"
          },
          "error": {
            "type": "string",
            "description": "Error type or code",
            "examples": {
              "VALIDATION_ERROR": "Input validation failed",
              "AUTHENTICATION_ERROR": "Authentication failed",
              "AUTHORIZATION_ERROR": "Insufficient permissions",
              "NOT_FOUND": "Resource not found",
              "RATE_LIMIT_EXCEEDED": "Rate limit exceeded",
              "INTERNAL_ERROR": "Internal server error"
            }
          },
          "message": {
            "type": "string",
            "description": "Human-readable error message",
            "example": "The request could not be processed due to validation errors"
          },
          "details": {
            "type": "object",
            "description": "Additional error details",
            "properties": {
              "field": {
                "type": "string",
                "description": "Field that caused the error"
              },
              "code": {
                "type": "string",
                "description": "Specific error code"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "requestId": {
                "type": "string",
                "description": "Unique request identifier for debugging"
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the error occurred"
          },
          "requestId": {
            "type": "string",
            "description": "Unique request identifier for debugging and support"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "required": [
          "success",
          "error",
          "message",
          "validationErrors"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "VALIDATION_ERROR"
          },
          "message": {
            "type": "string",
            "example": "Request validation failed"
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "Field name that failed validation"
                },
                "message": {
                  "type": "string",
                  "description": "Validation error message"
                },
                "value": {
                  "description": "The invalid value that was provided"
                },
                "constraint": {
                  "type": "string",
                  "description": "The validation rule that failed"
                }
              }
            }
          }
        }
      },
      "RateLimitError": {
        "type": "object",
        "required": [
          "success",
          "error",
          "message",
          "retryAfter"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "RATE_LIMIT_EXCEEDED"
          },
          "message": {
            "type": "string",
            "example": "Too many requests from this IP address"
          },
          "retryAfter": {
            "type": "integer",
            "description": "Seconds to wait before retrying",
            "example": 60
          },
          "limit": {
            "type": "integer",
            "description": "Request limit per time window",
            "example": 100
          },
          "remaining": {
            "type": "integer",
            "description": "Remaining requests in current window",
            "example": 0
          }
        }
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "summary": "API root endpoint",
        "description": "Get API information and version",
        "tags": [
          "root"
        ],
        "responses": {
          "200": {
            "description": "API information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "docs": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Comprehensive health check endpoint for Cloud Run monitoring",
        "tags": [
          "health"
        ],
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "uptime": {
                      "type": "number"
                    },
                    "version": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    },
                    "services": {
                      "type": "object",
                      "properties": {
                        "database": {
                          "type": "object"
                        },
                        "redis": {
                          "type": "object"
                        },
                        "scheduler": {
                          "type": "object"
                        }
                      }
                    },
                    "metrics": {
                      "type": "object",
                      "properties": {
                        "memory": {
                          "type": "object"
                        },
                        "cpu": {
                          "type": "object"
                        }
                      }
                    },
                    "responseTime": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service is unhealthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/debug/env": {
      "get": {
        "summary": "Debug environment variables",
        "description": "Check environment configuration (development only)",
        "tags": [
          "debug"
        ],
        "responses": {
          "200": {
            "description": "Environment variables",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "DB_HOST": {
                      "type": "string"
                    },
                    "DB_PORT": {
                      "type": "string"
                    },
                    "DB_NAME": {
                      "type": "string"
                    },
                    "DB_USER": {
                      "type": "string"
                    },
                    "DB_SSL": {
                      "type": "string"
                    },
                    "NODE_ENV": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/debug/schema": {
      "get": {
        "summary": "Debug database schema",
        "description": "Check database schema information (development only)",
        "tags": [
          "debug"
        ],
        "responses": {
          "200": {
            "description": "Database schema information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "users_table_columns": {
                      "type": "array"
                    },
                    "total_columns": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/debug/flows": {
      "get": {
        "summary": "Debug flows data",
        "description": "Debug endpoint for mobile app connectivity check",
        "tags": [
          "debug"
        ],
        "responses": {
          "200": {
            "description": "Debug flows information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_diag/dbinfo": {
      "get": {
        "summary": "Database diagnostic information",
        "description": "Temporary diagnostic endpoint for database connection info",
        "tags": [
          "debug"
        ],
        "responses": {
          "200": {
            "description": "Database connection information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "connection_info": {
                      "type": "object"
                    },
                    "env_check": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/ping": {
      "get": {
        "summary": "API ping endpoint",
        "description": "Simple ping endpoint to verify API connectivity",
        "tags": [
          "health"
        ],
        "responses": {
          "200": {
            "description": "Pong response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    },
                    "ts": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticate user with email/password or Firebase token",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  },
                  "firebaseToken": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "picture": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string"
                            },
                            "user": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/firebase-to-jwt": {
      "post": {
        "summary": "Convert Firebase token to JWT",
        "description": "Convert Firebase authentication token to internal JWT",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "firebaseToken"
                ],
                "properties": {
                  "firebaseToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token converted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string"
                            },
                            "user": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/register": {
      "post": {
        "summary": "User registration",
        "description": "Register a new user account",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  },
                  "name": {
                    "type": "string"
                  },
                  "picture": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "summary": "Refresh access token",
        "description": "Refresh user access token using refresh token",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string"
                            },
                            "refreshToken": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/logout": {
      "post": {
        "summary": "User logout",
        "description": "Logout user and invalidate tokens",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/verify": {
      "post": {
        "summary": "Verify token",
        "description": "Verify JWT token validity",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "valid": {
                              "type": "boolean"
                            },
                            "user": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile": {
      "get": {
        "summary": "Get user profile",
        "description": "Retrieve comprehensive user profile information",
        "tags": [
          "profiles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "description": "Update user profile information",
        "tags": [
          "profiles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "male",
                      "female",
                      "non-binary",
                      "transgender",
                      "prefer-not-to-say",
                      "other"
                    ]
                  },
                  "race": {
                    "type": "string",
                    "enum": [
                      "american-indian",
                      "asian",
                      "black",
                      "hispanic",
                      "native-hawaiian",
                      "white",
                      "multiracial",
                      "prefer-not-to-say",
                      "other"
                    ]
                  },
                  "disability": {
                    "type": "string",
                    "enum": [
                      "none",
                      "visual",
                      "hearing",
                      "mobility",
                      "cognitive",
                      "mental-health",
                      "chronic-illness",
                      "prefer-not-to-say",
                      "other"
                    ]
                  },
                  "preferredLanguage": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "healthGoals": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "fitnessLevel": {
                    "type": "string",
                    "enum": [
                      "beginner",
                      "intermediate",
                      "advanced",
                      "expert"
                    ]
                  },
                  "medicalConditions": {
                    "type": "string"
                  },
                  "profileVisibility": {
                    "type": "string",
                    "enum": [
                      "public",
                      "friends",
                      "private"
                    ]
                  },
                  "dataSharing": {
                    "type": "object",
                    "properties": {
                      "analytics": {
                        "type": "boolean"
                      },
                      "research": {
                        "type": "boolean"
                      },
                      "marketing": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user profile",
        "description": "Delete user profile (soft delete)",
        "tags": [
          "profiles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile/stats": {
      "get": {
        "summary": "Get profile statistics",
        "description": "Get user profile statistics and analytics",
        "tags": [
          "profiles"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/user": {
      "get": {
        "summary": "Get current user",
        "description": "Get current authenticated user information",
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/sync/guest-to-user": {
      "post": {
        "summary": "Sync guest data to user",
        "description": "Transfer guest user data to authenticated user account",
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "guestUserId"
                ],
                "properties": {
                  "guestUserId": {
                    "type": "string"
                  },
                  "mergeStrategy": {
                    "type": "string",
                    "enum": [
                      "replace",
                      "merge",
                      "skip"
                    ],
                    "default": "merge"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Guest data synced successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/settings": {
      "get": {
        "summary": "Get user settings",
        "description": "Retrieve user settings and preferences",
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Settings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserSettings"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user settings",
        "description": "Update user settings and preferences",
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notifications": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "boolean"
                      },
                      "push": {
                        "type": "boolean"
                      },
                      "sms": {
                        "type": "boolean"
                      },
                      "reminders": {
                        "type": "boolean"
                      },
                      "achievements": {
                        "type": "boolean"
                      },
                      "weeklyReports": {
                        "type": "boolean"
                      }
                    }
                  },
                  "privacy": {
                    "type": "object",
                    "properties": {
                      "profileVisibility": {
                        "type": "string",
                        "enum": [
                          "public",
                          "friends",
                          "private"
                        ]
                      },
                      "showStats": {
                        "type": "boolean"
                      },
                      "showFlows": {
                        "type": "boolean"
                      },
                      "allowFriendRequests": {
                        "type": "boolean"
                      }
                    }
                  },
                  "preferences": {
                    "type": "object",
                    "properties": {
                      "theme": {
                        "type": "string",
                        "enum": [
                          "light",
                          "dark",
                          "auto"
                        ]
                      },
                      "language": {
                        "type": "string"
                      },
                      "timezone": {
                        "type": "string"
                      },
                      "dateFormat": {
                        "type": "string"
                      },
                      "timeFormat": {
                        "type": "string",
                        "enum": [
                          "12h",
                          "24h"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserSettings"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/settings/notifications": {
      "put": {
        "summary": "Update notification settings",
        "description": "Update user notification preferences",
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "boolean"
                  },
                  "push": {
                    "type": "boolean"
                  },
                  "sms": {
                    "type": "boolean"
                  },
                  "reminders": {
                    "type": "boolean"
                  },
                  "achievements": {
                    "type": "boolean"
                  },
                  "weeklyReports": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/settings/privacy": {
      "put": {
        "summary": "Update privacy settings",
        "description": "Update user privacy preferences",
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "profileVisibility": {
                    "type": "string",
                    "enum": [
                      "public",
                      "friends",
                      "private"
                    ]
                  },
                  "showStats": {
                    "type": "boolean"
                  },
                  "showFlows": {
                    "type": "boolean"
                  },
                  "allowFriendRequests": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Privacy settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/settings/preferences": {
      "put": {
        "summary": "Update user preferences",
        "description": "Update user interface and behavior preferences",
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "theme": {
                    "type": "string",
                    "enum": [
                      "light",
                      "dark",
                      "auto"
                    ]
                  },
                  "language": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "dateFormat": {
                    "type": "string"
                  },
                  "timeFormat": {
                    "type": "string",
                    "enum": [
                      "12h",
                      "24h"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Preferences updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/settings/export": {
      "post": {
        "summary": "Export user data",
        "description": "Export all user data for download",
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Data export initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/settings/import": {
      "post": {
        "summary": "Import user data",
        "description": "Import user data from file",
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data import completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/settings/backup": {
      "get": {
        "summary": "Get backup status",
        "description": "Get user data backup status",
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Backup status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "lastBackup": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "backupSize": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/settings/restore": {
      "post": {
        "summary": "Restore from backup",
        "description": "Restore user data from backup",
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "backupId": {
                    "type": "string"
                  },
                  "confirmRestore": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data restore completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/settings/delete-account": {
      "delete": {
        "summary": "Delete user account",
        "description": "Permanently delete user account and all data",
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "confirmDelete"
                ],
                "properties": {
                  "confirmDelete": {
                    "type": "boolean"
                  },
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/flows": {
      "get": {
        "tags": [
          "flows"
        ],
        "summary": "Get user flows",
        "description": "Retrieve all flows for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Flows retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Flow"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "tags": [
          "flows"
        ],
        "summary": "Create new flow",
        "description": "Create a new flow for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "category": {
                    "type": "string"
                  },
                  "isPublic": {
                    "type": "boolean",
                    "default": false
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Flow created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Flow"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/v1/flows/{id}": {
      "get": {
        "tags": [
          "flows"
        ],
        "summary": "Get flow by ID",
        "description": "Retrieve a specific flow by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Flow ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Flow retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Flow"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      },
      "put": {
        "tags": [
          "flows"
        ],
        "summary": "Update flow",
        "description": "Update an existing flow",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Flow ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "category": {
                    "type": "string"
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Flow updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Flow"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      },
      "delete": {
        "tags": [
          "flows"
        ],
        "summary": "Delete flow",
        "description": "Delete a flow permanently",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Flow ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Flow deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/v1/flows/{id}/stats": {
      "get": {
        "tags": [
          "flows"
        ],
        "summary": "Get flow statistics",
        "description": "Get statistics for a specific flow",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Flow ID"
          },
          {
            "name": "timeframe",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "week",
                "month",
                "year",
                "all"
              ],
              "default": "all"
            },
            "description": "Timeframe for statistics"
          }
        ],
        "responses": {
          "200": {
            "description": "Flow statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "currentStreak": {
                          "type": "integer"
                        },
                        "longestStreak": {
                          "type": "integer"
                        },
                        "completedEntries": {
                          "type": "integer"
                        },
                        "totalEntries": {
                          "type": "integer"
                        },
                        "completionRate": {
                          "type": "number"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/v1/flow-entries": {
      "get": {
        "tags": [
          "entries"
        ],
        "summary": "Get flow entries",
        "description": "Retrieve flow entries for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "flowId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by flow ID"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            },
            "description": "Number of entries to return"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            },
            "description": "Number of entries to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Flow entries retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FlowEntry"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "tags": [
          "entries"
        ],
        "summary": "Create flow entry",
        "description": "Create a new flow entry",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "flowId",
                  "date",
                  "symbol"
                ],
                "properties": {
                  "flowId": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "symbol": {
                    "type": "string",
                    "enum": [
                      "+",
                      "-",
                      "*",
                      "/"
                    ]
                  },
                  "emotion": {
                    "type": "string"
                  },
                  "moodScore": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5
                  },
                  "note": {
                    "type": "string",
                    "maxLength": 1000
                  },
                  "quantitative": {
                    "type": "object",
                    "properties": {
                      "unitText": {
                        "type": "string"
                      },
                      "count": {
                        "type": "number"
                      }
                    }
                  },
                  "timebased": {
                    "type": "object",
                    "properties": {
                      "totalDuration": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Flow entry created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/FlowEntry"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/v1/flow-entries/{id}": {
      "get": {
        "tags": [
          "entries"
        ],
        "summary": "Get flow entry by ID",
        "description": "Retrieve a specific flow entry by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Flow entry ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Flow entry retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/FlowEntry"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      },
      "put": {
        "tags": [
          "entries"
        ],
        "summary": "Update flow entry",
        "description": "Update an existing flow entry",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Flow entry ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "symbol": {
                    "type": "string",
                    "enum": [
                      "+",
                      "-",
                      "*",
                      "/"
                    ]
                  },
                  "emotion": {
                    "type": "string"
                  },
                  "moodScore": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5
                  },
                  "note": {
                    "type": "string",
                    "maxLength": 1000
                  },
                  "quantitative": {
                    "type": "object",
                    "properties": {
                      "unitText": {
                        "type": "string"
                      },
                      "count": {
                        "type": "number"
                      }
                    }
                  },
                  "timebased": {
                    "type": "object",
                    "properties": {
                      "totalDuration": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Flow entry updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/FlowEntry"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      },
      "delete": {
        "tags": [
          "entries"
        ],
        "summary": "Delete flow entry",
        "description": "Delete a flow entry permanently",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Flow entry ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Flow entry deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/v1/plans": {
      "get": {
        "tags": [
          "plans"
        ],
        "summary": "Get plans",
        "description": "Retrieve available plans (placeholder endpoint)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Plans retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/v1/stats/users/{userId}": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get user statistics",
        "description": "Get comprehensive statistics for a specific user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalFlows": {
                          "type": "integer"
                        },
                        "totalEntries": {
                          "type": "integer"
                        },
                        "completedEntries": {
                          "type": "integer"
                        },
                        "currentStreak": {
                          "type": "integer"
                        },
                        "longestStreak": {
                          "type": "integer"
                        },
                        "completionRate": {
                          "type": "number"
                        },
                        "joinDate": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/v1/stats/leaderboard": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get leaderboard",
        "description": "Get global leaderboard data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of entries to return"
          },
          {
            "name": "timeframe",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "week",
                "month",
                "year",
                "all"
              ],
              "default": "all"
            },
            "description": "Timeframe for leaderboard"
          }
        ],
        "responses": {
          "200": {
            "description": "Leaderboard retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string"
                          },
                          "username": {
                            "type": "string"
                          },
                          "displayName": {
                            "type": "string"
                          },
                          "score": {
                            "type": "number"
                          },
                          "rank": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/v1/stats/flows/{flowId}": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get flow statistics",
        "description": "Get statistics for a specific flow",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "flowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Flow ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Flow statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "currentStreak": {
                          "type": "integer"
                        },
                        "longestStreak": {
                          "type": "integer"
                        },
                        "completedEntries": {
                          "type": "integer"
                        },
                        "totalEntries": {
                          "type": "integer"
                        },
                        "skippedEntries": {
                          "type": "integer"
                        },
                        "bonusEntries": {
                          "type": "integer"
                        },
                        "averageMoodScore": {
                          "type": "number"
                        },
                        "completionRate": {
                          "type": "number"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/v1/activities/stats": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get comprehensive activity statistics",
        "description": "Get comprehensive activity statistics for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "weekly",
                "monthly",
                "yearly",
                "all"
              ],
              "default": "all"
            },
            "description": "Timeframe for statistics"
          },
          {
            "name": "includeArchived",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Include archived flows"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Include deleted flows"
          }
        ],
        "responses": {
          "200": {
            "description": "Activity statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/v1/activities/scoreboard/{flowId}": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get scoreboard for specific flow",
        "description": "Get scoreboard data for a specific flow",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "flowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Flow ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Scoreboard data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/v1/activities/flow/{flowId}": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get activity statistics for specific flow",
        "description": "Get activity statistics for a specific flow",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "flowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Flow ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Flow activity statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/v1/sync/queue": {
      "post": {
        "tags": [
          "sync"
        ],
        "summary": "Queue sync operation",
        "description": "Queue an offline sync operation",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "entityType",
                  "entityId",
                  "operation",
                  "payload"
                ],
                "properties": {
                  "entityType": {
                    "type": "string",
                    "enum": [
                      "flow",
                      "flow_entry",
                      "user_profile",
                      "user_settings"
                    ]
                  },
                  "entityId": {
                    "type": "string"
                  },
                  "operation": {
                    "type": "string",
                    "enum": [
                      "CREATE",
                      "UPDATE",
                      "DELETE"
                    ]
                  },
                  "payload": {
                    "type": "object"
                  },
                  "metadata": {
                    "type": "object",
                    "default": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sync operation queued successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "operationId": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "queuedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/v1/sync/status": {
      "get": {
        "tags": [
          "sync"
        ],
        "summary": "Get sync status",
        "description": "Get current sync status for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Sync status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "isOnline": {
                          "type": "boolean"
                        },
                        "lastSyncAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "pendingOperations": {
                          "type": "integer"
                        },
                        "syncInProgress": {
                          "type": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/v1/sync/pending": {
      "get": {
        "tags": [
          "sync"
        ],
        "summary": "Get pending sync operations",
        "description": "Get pending sync operations for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            },
            "description": "Maximum number of operations to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Pending operations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operationId": {
                            "type": "string"
                          },
                          "entityType": {
                            "type": "string"
                          },
                          "entityId": {
                            "type": "string"
                          },
                          "operation": {
                            "type": "string"
                          },
                          "queuedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "root",
      "description": "Root API endpoint and service information",
      "externalDocs": {
        "description": "API Documentation",
        "url": "https://flow.app/docs/api"
      }
    },
    {
      "name": "health",
      "description": "Health monitoring and service status endpoints for production monitoring",
      "externalDocs": {
        "description": "Monitoring Guide",
        "url": "https://flow.app/docs/monitoring"
      }
    },
    {
      "name": "debug",
      "description": "Debug and diagnostic endpoints (development environment only)",
      "externalDocs": {
        "description": "Debug Guide",
        "url": "https://flow.app/docs/debugging"
      }
    },
    {
      "name": "auth",
      "description": "Authentication and authorization endpoints using Firebase JWT tokens",
      "externalDocs": {
        "description": "Authentication Guide",
        "url": "https://flow.app/docs/authentication"
      }
    },
    {
      "name": "profiles",
      "description": "User profile management including demographics, privacy settings, and personal information",
      "externalDocs": {
        "description": "Profile Management",
        "url": "https://flow.app/docs/profiles"
      }
    },
    {
      "name": "user",
      "description": "User account management and guest-to-user data synchronization",
      "externalDocs": {
        "description": "User Management",
        "url": "https://flow.app/docs/users"
      }
    },
    {
      "name": "settings",
      "description": "User preferences, notification settings, and privacy controls",
      "externalDocs": {
        "description": "Settings Guide",
        "url": "https://flow.app/docs/settings"
      }
    },
    {
      "name": "flows",
      "description": "Flow management endpoints for creating, updating, and managing habit flows",
      "externalDocs": {
        "description": "Flow Management",
        "url": "https://flow.app/docs/flows"
      }
    },
    {
      "name": "entries",
      "description": "Flow entry endpoints for tracking daily progress and activities",
      "externalDocs": {
        "description": "Flow Entries",
        "url": "https://flow.app/docs/entries"
      }
    },
    {
      "name": "plans",
      "description": "Plan management endpoints for subscription and premium features",
      "externalDocs": {
        "description": "Plans & Pricing",
        "url": "https://flow.app/docs/plans"
      }
    },
    {
      "name": "stats",
      "description": "Statistics and analytics endpoints for user and flow metrics",
      "externalDocs": {
        "description": "Statistics",
        "url": "https://flow.app/docs/stats"
      }
    },
    {
      "name": "activities",
      "description": "Activity stats and analytics endpoints for comprehensive reporting",
      "externalDocs": {
        "description": "Activity Analytics",
        "url": "https://flow.app/docs/activities"
      }
    },
    {
      "name": "sync",
      "description": "Sync queue endpoints for offline-to-online data synchronization",
      "externalDocs": {
        "description": "Sync Management",
        "url": "https://flow.app/docs/sync"
      }
    }
  ]
}